name: Deploy staging

on:
  pull_request:
  pull_request_target:

jobs:
  build-package:
    name: Build package
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        with:
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v3

        with:
          node-version: 16
          cache: "npm"

      - name: Install package
        run: npm ci

      - name: Build package
        run: npm run build

        env:
          REACT_APP_API_HOST: ${{ vars.API_STAGING_HOST }}
          REACT_APP_GOOGLE_MAPS_KEY: ${{ secrets.GOOGLE_MAPS_KEY }}

      - name: Prepare package
        run: cp firebase.json build/

      - name: Upload package
        uses: actions/upload-artifact@v3

        with:
          name: staging-pr${{github.event.number}}
          path: build

  deploy-package:
    name: Deploy package
    needs: build-package
    runs-on: ubuntu-latest

    environment:
      name: Staging
      url: ${{ steps.deployment_url.outputs.url }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Download artifact
        uses: actions/download-artifact@v3

        with:
          name: staging-pr${{github.event.number}}

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v1"
        with:
          access_token_scopes: "email, openid, https://www.googleapis.com/auth/cloud-platform, https://www.googleapis.com/auth/firebase"
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          create_credentials_file: true

      - name: Deploy to Firebase Hosting
        run: firebase hosting:channel:deploy --project staging-tusestimaciones pr${{github.event.number}} --expires 30d

      - id: deployment_url
        name: Set environment URL
        run: |
          URL="$(firebase --project staging-tusestimaciones --non-interactive --json hosting:channel:open pr${{github.event.number}} | jq -r '.result.url')"
          echo "url=$URL" >> $GITHUB_OUTPUT

